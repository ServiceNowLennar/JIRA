<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_journal_field</collection>
        <condition>current.element=="comments" &amp;&amp; current.name=="task" &amp;&amp; gs.getSession().isInteractive() &amp;&amp; gs.getProperty('x_rens_regolink_ji.jira.integration.module')!="none"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Jira BugTracker-Send Comments to JIRA</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var relTable= new GlideRecord('task');
	relTable.get(current.element_id);
	var tableName=relTable.getRecordClassName();
	if(tableName=="problem" || tableName=="rm_defect")
		{
		var j = new JiraBugIntegration();
		if(gs.getProperty('x_rens_regolink_ji.jira.integration.module')=="problem")
			{	var getProblem = new GlideRecord("problem");
			getProblem.get(current.element_id);
			if( getProblem.isValid() ){
				
				if( !getProblem.x_rens_regolink_ji_jira_key.nil()){
					
					var commentIncident = {};
						commentIncident.body = ""+current.value;
						j.addComment(commentIncident, ""+getProblem.x_rens_regolink_ji_jira_key,"issue");
					}
					
				}
			}
			if(gs.getProperty('x_rens_regolink_ji.jira.integration.module')=="defect")
				{	
					var getdefect = new GlideRecord("rm_defect");
				getdefect.get(current.element_id);
				if( getdefect.isValid() ){
					
					if( !getdefect.x_rens_regolink_ji_jira_key.nil()){
						
						var commentdefect = {};
							commentdefect.body = ""+current.value;
							j.addComment(commentdefect, ""+getdefect.x_rens_regolink_ji_jira_key,"issue");
						}
						
					}
				}
				
				
				
				
			}
			
		})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Jeffrey.Figueroa@Lennar.com</sys_created_by>
        <sys_created_on>2018-12-05 13:34:38</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ecfbe37bdbc62300990e6cf3ca9619c2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Jira BugTracker-Send Comments to JIRA</sys_name>
        <sys_overrides/>
        <sys_package display_value="Lennar Jira Tracker" source="x_lerp_lennar_jira">5f0d5ae74fc627000f24d48e5210c727</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Lennar Jira Tracker">5f0d5ae74fc627000f24d48e5210c727</sys_scope>
        <sys_update_name>sys_script_ecfbe37bdbc62300990e6cf3ca9619c2</sys_update_name>
        <sys_updated_by>Jeffrey.Figueroa@Lennar.com</sys_updated_by>
        <sys_updated_on>2018-12-05 13:34:38</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ecfbe37bdbc62300990e6cf3ca9619c2"/>
</record_update>
